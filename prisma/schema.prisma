// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  password  String
  role      Role      @default(USER)
  isDeleted  Boolean   @default(false)

  createdTasks Task[] @relation("CreatedTasks") // ← tareas creadas por el usuario
  assignedTasks Task[] @relation("Task_assignedTo") // ← tareas asignadas al usuario
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  status      TaskStatus @default(PENDING)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?
  isDeleted   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relación con el usuario que creó la tarea
  createdBy   User    @relation("CreatedTasks", fields: [createdById], references: [id])
  createdById String

  // Relación con el usuario asignado
  assignedTo  User?   @relation("Task_assignedTo", fields: [assignedToId], references: [id])
  assignedToId String?
}
